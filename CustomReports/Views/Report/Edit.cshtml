@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
@using CustomReports.Models
@model Report
<link href="~/Content/GridStack/gridstack.css" rel="stylesheet" />
<style>

    .switch {
        position: relative;
        display: inline-block;
        width: 20px;
        height: 15px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 13px;
            width: 13px;
            left: 1px;
            bottom: 2px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(13px);
        -ms-transform: translateX(13px);
        transform: translateX(13px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }

    .edit-mode {
        background: linear-gradient( 45deg, #fff, #fff 70%, rgba(0,0,0,0.5) 0%, rgba(0,0,0,0.5) );
        background-size: 2px 2px;
    }

    .filter {
        font-size: 12px;
    }

    .d-tab {
        border-radius: 10px 10px 0px 0px;
        background-color: cadetblue;
        opacity: 0.5;
        margin-right: 1px;
    }

    .current-tab {
        border-radius: 10px 10px 0px 0px;
        margin-right: 1px;
    }
</style>
<div class="row min-vh-100 overflow-hidden m-0">

    <div class="page-content bg-light col m-0">
        <div class="d-flex flex-row mt-2">
            <button class="btn btn-info mx-2 edit d-none" onclick="addPage(@Model.Id)">
                <i class="fa fa-plus" aria-hidden="true"></i>
                Page
            </button>
            <button class="btn btn-info mx-2 edit d-none" onclick="sa()">
                <i class="fa fa-plus" aria-hidden="true"></i>
                Filter
            </button>
            <button class=" btn btn-info mx-2  ml-auto lecture" onclick="allowEdit()">
                <i class="fa fa-pencil-square" aria-hidden="true"></i>
                Edit Mode
            </button>
            <button class="btn btn-info mx-2  ml-auto edit d-none" onclick="allowEdit()">
                <i class="fa fa-file-text-o" aria-hidden="true"></i>
                Reading Mode
            </button>
            <button class="btn btn-info mx-2">
                <i class="fa fa-file-image-o" aria-hidden="true"></i>
                Export
            </button>
            <button class="btn btn-info mx-2">
                <i class="fa fa-share-alt-square" aria-hidden="true"></i>
                Share
            </button>
            <button role="button" class="btn btn-info mx-2" onclick="hideFilters()">
                <i class="fa fa-filter" aria-hidden="true"></i>
                Show Filters
            </button>

        </div>
        <div class="page-header bg-info m-2 p-2">
            <div class="container-fluid">
                <div class="row">
                    <h2 class="h5 no-margin-bottom text-white col-lg-5">@Model.ReportName</h2>
                    <h2 class="h5 no-margin-bottom text-white col-lg-5">Date : @DateTime.Now.ToString()</h2>

                </div>
            </div>
        </div>
        <div class="row px-1 pb-0 mx-1 mt-1 mb-0 tabs">
            @if (Model.Pages != null && Model.Pages.Count > 0)
            {
                <button onclick="showPage(0)" class="col btn btn-info px-2 p-2 tab current-tab"> Page  <span class="badge badge-light rounded">1</span></button>
                for (int i = 1; i < Model.Pages.Count; i++)
                {
                    <button onclick="showPage(@i)" class="col btn p-2 d-tab tab text-white"> Page <span class="badge badge-light rounded">@(i+1)</span></button>
                }

            }

        </div>
        @if (Model.Pages != null && Model.Pages.Count > 0)
        {
            var pages = Model.Pages.ToList();
            <div class="row border border-info mx-2 px-0 page" id="@pages[0].Id">
                <div class="d-none flex-row-reverse bg-dark w-100 edit-panel">
                    <button class="btn btn-info rounded-circle m-1" onclick="addBloc(@pages[0].Id,0)">
                        <i class="fa fa-plus" aria-hidden="true"></i>
                    </button>
                    <button class="btn btn-info rounded-circle m-1" onclick="updateBlocs()">
                        <i class="fa fa-check-circle-o" aria-hidden="true"></i>
                    </button>
                    <button class="btn btn-info rounded-circle m-1" onclick="removePage(@pages[0].Id,0)">
                        <i class="fa fa-trash-o" aria-hidden="true"></i>
                    </button>
                    <button class="btn btn-info rounded-circle m-1">
                        <i class="fa fa-filter" aria-hidden="true"></i>
                    </button>
                </div>
                <div class="col-sm-12 col-md-12 bg-white px-0 py-2 report-content">
                    <div class="grid-stack grid-stack-instance-1 edit-mode bg-white min-vh-100" data-gs-animate="yes">
                        @foreach (var bloc in pages[0].Blocs)
                        {
                            <div class="grid-stack-item" id="@bloc.Id" data-gs-id="@bloc.Id" data-gs-x="@bloc.X" data-gs-y="@bloc.Y" data-gs-width="@bloc.W" data-gs-height="@bloc.H">
                                <div class="grid-stack-item-content bg-light shadow">
                                    <div class="d-flex @bloc.HeaderColor p-1">
                                        <h1 class="font-weight-bold text-light p-1" style="font-size:15px">@bloc.Title</h1>
                                        <div class="row ml-auto pr-1">
                                            <a class="btn @bloc.HeaderColor text-white rounded edit" href="/Bloc/Edit/@bloc.Id" title="Edit">
                                                <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                                            </a>
                                            <a class="btn @bloc.HeaderColor text-white rounded edit" onclick="removeBloc(@bloc.Id,0)" title="Delete">
                                                <i class="fa fa-trash-o" aria-hidden="true"></i>
                                            </a>
                                        </div>

                                    </div>
                                    <canvas id="chart_@bloc.Id" class="chartjs-render-monitor h-75 flex-fill" style="display: block; width: 586px; height: 380px;" width="586" height="380"></canvas>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            for (int i = 1; i < pages.Count; i++)
            {
                <div class="row border border-info mx-2 px-0 page d-none" id="@pages[i].Id">
                    <div class="d-none flex-row-reverse bg-dark w-100 edit-panel">
                        <button class="btn btn-info rounded-circle m-1" onclick="addBloc(@pages[i].Id,@i)">
                            <i class="fa fa-plus" aria-hidden="true"></i>
                        </button>
                        <button class="btn btn-info rounded-circle m-1" onclick="updateBlocs()">
                            <i class="fa fa-check-circle-o" aria-hidden="true"></i>
                        </button>
                        <button class="btn btn-info rounded-circle m-1" onclick="removePage(@pages[i].Id,@i)">
                            <i class="fa fa-trash-o" aria-hidden="true"></i>
                        </button>
                        <button class="btn btn-info rounded-circle m-1">
                            <i class="fa fa-filter" aria-hidden="true"></i>
                        </button>
                    </div>
                    <div class="col-sm-12 col-md-12 bg-white px-0 py-2 report-content">
                        <div class="grid-stack grid-stack-instance-1 edit-mode bg-white min-vh-100" data-gs-animate="yes">
                            @foreach (var bloc in pages[i].Blocs)
                            {
                                <div class="grid-stack-item" id="@bloc.Id" data-gs-id="@bloc.Id" data-gs-x="@bloc.X" data-gs-y="@bloc.Y" data-gs-width="@bloc.W" data-gs-height="@bloc.H">
                                    <div class="grid-stack-item-content bg-light shadow">
                                        <div class="d-flex @bloc.HeaderColor p-1">
                                            <h1 class="font-weight-bold text-light p-1" style="font-size:15px">@bloc.Title</h1>
                                            <div class="row ml-auto pr-1">
                                                <a class="btn @bloc.HeaderColor text-white rounded edit" href="/Bloc/Edit/@bloc.Id" title="Edit">
                                                    <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                                                </a>
                                                <a class="btn @bloc.HeaderColor text-white rounded edit" onclick="removeBloc(@bloc.Id,@i)" title="Delete">
                                                    <i class="fa fa-trash-o" aria-hidden="true"></i>
                                                </a>
                                            </div>

                                        </div>
                                        <canvas id="chart_@bloc.Id" class="chartjs-render-monitor h-75 flex-fill" style="display: block; width: 586px; height: 380px;" width="586" height="380"></canvas>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        }

    </div>
    <div class="bg-dark p-2 shadow filters " style="width:200px;">
        <p class="bg-white text-muted rounded p-1 mr-2 font-weight-bold text-center">
            <i class="fa fa-bars" aria-hidden="true"></i>
            Report Filters
        </p>
        <div class="card mr-2">
            <div class="card-header">
                <div class="d-flex flex-row">
                    <label class="switch col-lg-2">
                        <input type="checkbox" checked>
                        <span class="slider round"></span>
                    </label>
                    <span class="col-lg-10 filter"> Product Category </span>
                </div>
            </div>
            <div class="card-body">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="option1">
                    <label class="form-check-label" for="inlineCheckbox1">Category 1</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="inlineCheckbox2" value="option2">
                    <label class="form-check-label" for="inlineCheckbox2">Category 2</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="inlineCheckbox3" value="option3">
                    <label class="form-check-label" for="inlineCheckbox3">Categoy 3</label>
                </div>
            </div>
        </div>
        <div class="card mr-2 mt-2">
            <div class="card-header">
                <div class="d-flex flex-row">
                    <label class="switch col-lg-2">
                        <input type="checkbox" checked>
                        <span class="slider round"></span>
                    </label>
                    <span class="col-lg-10 filter"> Another filter </span>
                </div>
            </div>
            <div class="card-body">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="option1" checked>
                    <label class="form-check-label" for="exampleRadios1">
                        Default radio
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="option2">
                    <label class="form-check-label" for="exampleRadios2">
                        Second radio
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3">
                    <label class="form-check-label" for="exampleRadios3">
                        Disabled radio
                    </label>
                </div>
            </div>
        </div>
        <div class="card mr-2 mt-2">
            <div class="card-header">
                <div class="d-flex flex-row">
                    <label class="switch col-lg-2">
                        <input type="checkbox" checked>
                        <span class="slider round"></span>
                    </label>
                    <span class="col-lg-10 filter"> Year </span>
                </div>
            </div>
            <div class="card-body">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="option1" checked>
                    <label class="form-check-label" for="exampleRadios1">
                        Last two years
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="option2">
                    <label class="form-check-label" for="exampleRadios2">
                        Last year
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3">
                    <label class="form-check-label" for="exampleRadios3">
                        This year
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3">
                    <label class="form-check-label" for="exampleRadios3">
                        Next year
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3">
                    <label class="form-check-label" for="exampleRadios3">
                        Next two years
                    </label>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/GridStack/gridstack.all.js"></script>
<script src="~/Scripts/GridStack/sweetalert.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/GridStack/popper.min.js"></script>
<script src="~/lib/twitter-bootstrap/js/bootstrap.min.js"></script>
<script src="~/Scripts/GridStack/font-awsome.js"></script>
<script src="~/Scripts/GridStack/notiflix-aio-2.4.0.min.js"></script>
<script src="~/Scripts/chart.js/Chart.min.js"></script>
<script src="~/Scripts/GridStack/dashbord.js"></script>
<script src="~/Scripts/GridStack/sweetalert2@9.js"></script>
<script>
    function sa() {
        var filters = ["filter1", "filter2", "filter3", "filter4"];
        var html = '';
        filters.forEach((filter) => {
            var filterOption = '<h3 class="text-success">  <input type="checkbox" id="' + filter + '"  />  ' + filter + '</h3>';
            html += filterOption;
        });
        Swal.fire({
            title: 'Select The Report Filters',
            html: html,
            confirmButtonText: 'confirmer',
            preConfirm: () => {
                var result = [];
                filters.forEach((filter) => {
                    result[filter] = Swal.getPopup().querySelector("#" + filter).checked
                });


                return result;
            }
        }).then((result) => {
            console.log(result);
            $(".filters div").remove();
            var keys = Object.keys(result.value);
            keys.forEach((key) => {
                if (result.value[key]) {
                    var newFilter = '<div class="card mr-2 mt-2"><div class="card-header"><div class="d-flex flex-row"><label class="switch col-lg-2"><input type="checkbox" checked><span class="slider round"></span></label><span class="col-lg-10 filter">' + key + '</span></div></div><div class="card-body"><div class="form-check"><input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="option1" checked><label class="form-check-label" for="exampleRadios1">Default radio</label></div><div class="form-check"><input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="option2"><label class="form-check-label" for="exampleRadios2">Second radio</label></div><div class="form-check"><input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3"><label class="form-check-label" for="exampleRadios3">Disabled radio</label></div></div></div>';
                    $(".filters").append(newFilter);
                }
            });
            Swal.fire("Report Filters Updated ! ");
    })
    }
</script>

